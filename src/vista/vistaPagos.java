/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Membresia;
import modelo.MembresiaDAO;
import modelo.Pago;
import modelo.PagoDAO;
import modelo.Usuario;
import modelo.UsuarioDAO;

/**
 *
 * @author nahuel lozano
 */
public class vistaPagos extends javax.swing.JFrame {

     private  DefaultTableModel model;
     private List<Integer> listaId = new ArrayList<>();
     private int usuarioSeleccionadoId = -1;
    public vistaPagos() {
        initComponents();
         mostrarPago();
        // agregarEventoClickEnTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        txtFechaPago = new javax.swing.JTextField();
        txtMonto = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtIdUsuario = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPago = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        labelPlanMembresia = new javax.swing.JLabel();
        txtplanMembresia = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("Monto");

        jLabel5.setText("fecha de pago");

        jLabel6.setText("Estado");

        txtEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstadoActionPerformed(evt);
            }
        });

        txtFechaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaPagoActionPerformed(evt);
            }
        });

        jLabel9.setText("id Usuario");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdUsuario)
                    .addComponent(txtMonto)
                    .addComponent(txtFechaPago)
                    .addComponent(txtEstado)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(0, 72, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(12, 12, 12)
                .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtFechaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel2.setText("FORMULARIO DE PAGO");

        btnVolver.setText("volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(826, Short.MAX_VALUE)
                    .addComponent(btnVolver)
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 34, Short.MAX_VALUE)
                .addComponent(jLabel2))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(21, Short.MAX_VALUE)
                    .addComponent(btnVolver)
                    .addContainerGap()))
        );

        btnAgregar.setText("agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBuscar.setText("buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tablaPago.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "id pago", "Monto", "Estado", "Fecha de Pago", "id Usuario", "Nombre", "Apellido", "DNI", "Email", "Estado de membresia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaPago);

        jButton6.setText("jButton1");

        btnAtualizar.setText("actualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        labelPlanMembresia.setText("plan membresia");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAtualizar)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnAgregar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnBuscar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelPlanMembresia)
                                    .addComponent(txtplanMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 941, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(358, 358, 358)
                    .addComponent(jButton6)
                    .addContainerGap(724, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelPlanMembresia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtplanMembresia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar)
                            .addComponent(btnBuscar)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(btnAtualizar)
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(207, 207, 207)
                    .addComponent(jButton6)
                    .addContainerGap(232, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        //creamos nuevos objetos
     try {
            double monto = Double.parseDouble(txtMonto.getText());
            String estado = txtEstado.getText();

            // Validar formato de fecha
            String fechaTexto = txtFechaPago.getText();

            // valida formato fecha que sea correcto
            if (!fechaTexto.matches("\\d{4}-\\d{2}-\\d{2}")) {
                JOptionPane.showMessageDialog(null, "La fecha debe tener el formato yyyy-MM-dd");
                return;
            }
            // Convertir la fecha de texto a objeto Date
            SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            
            Date fechaPago = formato.parse(fechaTexto);
            
            int idUsuario = Integer.parseInt(txtIdUsuario.getText());
            String nombreMembresia = txtplanMembresia.getText();
            if (nombreMembresia == null || nombreMembresia.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "El nombre de la membresía no puede estar vacío.");
                return;
            }

            // Verificar si el usuario existe
            UsuarioDAO usuarioDAO = new UsuarioDAO();
            Usuario usuario = new Usuario(idUsuario);
            //
            if (!usuarioDAO.buscarUsuario(usuario)) {
                JOptionPane.showMessageDialog(null, "El usuario no existe. Debe crearlo antes de registrar el pago.");
                return;
            }

            // Buscar si ya tiene membresía activa
            MembresiaDAO membresiaDAO = new MembresiaDAO();
            int idMembresia = membresiaDAO.obtenerIdMembresiaPorUsuario(idUsuario);
            if (idMembresia == -1) {
                // Si no tiene, crear una nueva membresía y luego obtener el id generado automáticamente
                membresiaDAO.crearNuevaMembresiaManual(idUsuario, nombreMembresia);
                idMembresia = membresiaDAO.obtenerIdMembresiaPorUsuario(idUsuario);
                if (idMembresia == -1) {
                    JOptionPane.showMessageDialog(null, "Error al crear la membresía");
                    return;
                }
            }

            Membresia membresia = new Membresia();
            membresia.setIdMembresia(idMembresia);

            Pago nuevoPago = new Pago(monto, estado, fechaPago, usuario, membresia);
            PagoDAO pagoDAO = new PagoDAO();

            if (pagoDAO.resgistrarPago(nuevoPago)) {
                JOptionPane.showMessageDialog(null, "Pago guardado con éxito");
                mostrarPago(); // Actualiza la tabla
            } else {
                JOptionPane.showMessageDialog(null, "Error al guardar el pago");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al guardar el pago: " + e);
        }
        
        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtFechaPagoActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaPagoActionPerformed

    private void txtEstadoActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstadoActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {
      
        new Menu().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnVolverActionPerformed

    // Acción al presionar el botón "Buscar" para filtrar pagos por ID de usuario
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            // Obtener el texto ingresado en el campo de ID de usuario
            String idUsuarioStr = txtIdUsuario.getText();
            // Validar que el campo no esté vacío
            if (idUsuarioStr == null || idUsuarioStr.trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese un ID de usuario para buscar pagos.");
                return;
            }
            // Convertir el texto a entero
            int idUsuario = Integer.parseInt(idUsuarioStr);
            PagoDAO pagoDAO = new PagoDAO();
            // Obtener todos los pagos
            List<Pago> pagos = pagoDAO.obtenerTodo();
            DefaultTableModel model = (DefaultTableModel) tablaPago.getModel();
            // Limpiar la tabla antes de mostrar resultados
            model.setRowCount(0);
            // Recorrer la lista de pagos y agregar solo los que coinciden con el ID de usuario
            for (Pago pago : pagos) {
                if (pago.getUsuario().getIdUsuario() == idUsuario) {
                    model.addRow(new Object[]{
                        pago.getIdPago(),
                        pago.getMonto(),
                        pago.getEstado(),
                        pago.getFecha_pago(),
                        pago.getUsuario().getIdUsuario(),
                        pago.getUsuario().getNombre(),
                        pago.getUsuario().getApellido(),
                        pago.getUsuario().getDni(),
                        pago.getUsuario().getEmail(),
                        pago.getMembresia().getEstado()
                    });
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al buscar pagos: " + e.getMessage());
        }
    }

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        mostrarPago();
    }

    public void mostrarPago() {
        ////clase que facilita la elimiacion y modificacion de filas
        DefaultTableModel model = (DefaultTableModel) tablaPago.getModel();
        if (model == null) {
            JOptionPane.showMessageDialog(null, "error ");
            return;
        }
         //limpia la tabla ante de agrrgar datos
        model.setRowCount(0);
        //instancia la tabla antes de agregar datos nuevos
        PagoDAO consu = new PagoDAO(); 
        //obtener la lista de usuarios actualizada
       
        List<Pago> pagos = consu.obtenerTodo(); 
        try {
            //recorre la lista de usuario y agrega cada uno como fila
            

            for (Pago pago : pagos) {
               
                listaId.add(pago.getIdPago());
                
                model.addRow(new Object[]{
                    pago.getIdPago(),
                    pago.getMonto(),
                    pago.getEstado(),
                    pago.getFecha_pago(),
                    pago.getUsuario().getIdUsuario(),
                    pago.getUsuario().getNombre(),
                    pago.getUsuario().getApellido(),
                    pago.getUsuario().getDni(),
                    pago.getUsuario().getEmail(),
                    pago.getMembresia().getEstado()
                        
                   
                   
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR " + e);

        }

    }
    
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelPlanMembresia;
    private javax.swing.JTable tablaPago;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFechaPago;
    private javax.swing.JTextField txtIdUsuario;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtplanMembresia;
    // End of variables declaration//GEN-END:variables
}
